/** \page mhdPTutCompile Compile
 *
 * -# Get the list of available executables:
 *    
 *    #$>make help
 *
 * -# Each implemented simulations (ex: BoussinesqFPlane3DQG) has 4 different executables using the same naming convention:
 *
 *    - SimNameConfig: Generate a template for the required XML configuration file
 *
 *    - SimNameState: Generate an initial state file
 *
 *    - SimNameModel: This is the actual simulation
 *
 *    - SimNameVisu: Process a state file into physical space data to be visualized
 *
 * -# Configure and copy the Python modules and scripts:
 *
 *    #$>make install
 *
 * -# To generate a configuration file:
 *
 *    -# Compile the "Config" executable:
 *    
 *       #$>make -j 6 SimNameConfig #(Assuming you want 6 compilations in parallel)
 *
 *    -# Generate configuration file:
 *
 *       #$>Executables/SimNameConfig
 *
 *    -# A new file called parameters_template_###.cfg has be written. ### stands for the three letter spatial scheme name of the simulation.
 *
 *    -# This template file does NOT contain usable default values and has to be edited and renamed to parameters.cfg
 *
 * -# To generate an initial state file:
 *
 *    -# Compile the "State" executable:
 *
 *       #$>make -j 6 SimNameState #(Assuming you want 6 compilations in parallel)
 *
 *    -# Edit the parameters.cfg file
 *
 *    -# Generate state file:
 *
 *       #$>Executables/GenerateState
 *
 *    -# A new HDF5 file name state0000.hdf5 should have been written. It can be used as initial state for a simulation if renamed to state_initial.hdf5.
 *
 * -# To run a simulation:
 *
 *    -# compile the "Model" executable:
 *
 *       #$>make -j 6 SimNameModel #(Assuming you want 6 compilations in parallel)
 *
 *    -# Edit the parameters.cfg file
 *
 *    -# Provide an initial state file named state_initial.hdf5
 *
 *    -# To run the simulation, three files are required:
 *
 *       -# Binary: SimNameModel
 *
 *       -# Configuration file: parameters.cfg
 *
 *       -# Initial state: state_initial.hdf5
 *
 *       -# Run simulation:
 *
 *          #$>Executables/SimNameModel
 *
 * -# Generate visualization HDF5 file:
 *
 *    -# compile the "Visu" executable:
 *
 *       #$>make -j 6 SimNameVisu #(Assuming you want 6 compilations in parallel)
 *
 *    -# Edit the parameters.cfg file
 *
 *    -# Provide a state file to be converted. It has to be name state4Visu.hdf5. There is no need to copy the file a symbolic link is sufficient
 *
 *       #$>ln -s state0123.hdf5 state4Visu.hdf5
 *
 *    -# Generate visualization HDF5 file:
 *
 *       #$>Executables/SimNameVisu
 *
 *    -# A new file named visState0000.hdf5 has been written. And addition step is required to visualize it:
 *
 *       -# To use ParaView an XDMF file has to be generated:
 *
 *          #$>python Scripts/Python/createXDFM.py -i visState0000.hdf5 -o vis_me.xdmf
 *
 *       -# To use ParaView with a timeseries an XDMF file has to be generated:
 *
 *          #$>python Scripts/Python/createXDFM.py -i visState0000.hdf5 -n 20 -o vis_series_me.xdmf
 *
 *          This command will look for files visState0000.hdf5 through visState0009.hdf5.
 *
 *       -# To use Vapor VDF files have to be generated
 *
 *          #$>bash Scripts/Bash/createVapor.py visState0000.hdf5 vis_me.vdf
 */
